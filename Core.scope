/%
@noalloc: This function does not use string concatenation.

Prints @"s" into `stdout` along with a new-line.
%/
func void println(str s) {
	print(s);
	print("\n");
}

/%
Converts @"b" into a string.

Returns `"true"` or `"false"`.
%/
func str boolToStr(bool b) {
	if (b) {
		ret "true";
	}
	ret "false";
}

/%
Converts @"num" into a string.

Returns the number in a basic format without any commas.
Prepends a `-` if negative.
%/
func str intToStr(int num) {
	// If we don't do this, this will return ""
	if (num == 0) {
		ret "0";
	}
	
	str out = "";
	bool neg = num < 0;
	
	// Deal with negatives
	if (neg) {
		num = -num;
	}
	
	// Add digits (in reverse order)
	while (num > 0) {
		out = "0123456789"[num % 10] + out;
		num /= 10;
	}
	
	// Add negative sign (if negative)
	if (neg) {
		out = "-" + out;
	}
	
	ret out;
}